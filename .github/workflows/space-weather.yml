name: space-weather

permissions:
  contents: write

on:
  schedule:
    - cron: "*/15 * * * *"   # every 15 minutes (GitHub runners use UTC)
  workflow_dispatch: {}       # lets you run it manually from the Actions tab

jobs:
  run:
    runs-on: ubuntu-latest

    env:
      # required
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      # optional, but nice to have
      HTTP_USER_AGENT: "(gaiaeyes.com, gaiaeyes7.83@gmail.com)"
      SINCE_HOURS: "72"
      # leave these unset to use script defaults (recommended)
      # KP_URL: "https://services.swpc.noaa.gov/json/planetary_k_index_1m.json"
      # SW_URL: "https://services.swpc.noaa.gov/products/solar-wind/plasma-7-day.json"
      # MAG_URL: "https://services.swpc.noaa.gov/products/solar-wind/mag-7-day.json"
      ALERTS_URL: "https://services.swpc.noaa.gov/products/alerts.json"
      FORECAST_URL: "https://services.swpc.noaa.gov/text/3-day-forecast.txt"
      OUTPUT_JSON_GZIP: "false"
      NEXT72_DEFAULT: "Quiet to unsettled"
      MEDIA_REPO_OWNER: ${{ secrets.MEDIA_REPO_OWNER }}
      MEDIA_REPO_NAME:  ${{ secrets.MEDIA_REPO_NAME }}
      MEDIA_CDN_BASE:   ${{ secrets.MEDIA_CDN_BASE }}
      GAIAEYES_MEDIA_TOKEN: ${{ secrets.GAIAEYES_MEDIA_TOKEN }}
      GAIAEYES_MEDIA_SSH_KEY: ${{ secrets.GAIAEYES_MEDIA_SSH_KEY }}
      MEDIA_ROOT: ${{ secrets.MEDIA_ROOT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout media repo (gaiaeyes-media)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.MEDIA_REPO_OWNER }}/${{ env.MEDIA_REPO_NAME }}
          token: ${{ env.GAIAEYES_MEDIA_TOKEN }}
          path: gaiaeyes-media

      - name: Set OUTPUT_JSON_PATH for emitter
        run: |
          # Always emit into gaiaeyes-media/data to avoid path traversal from MEDIA_ROOT
          DEST="${{ github.workspace }}/gaiaeyes-media/data/space_weather.json"
          echo "OUTPUT_JSON_PATH=${DEST}" >> $GITHUB_ENV
          echo "Using OUTPUT_JSON_PATH=${DEST}"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install httpx asyncpg

      - name: Run ingester
        env:
          OUTPUT_JSON_PATH: ${{ env.OUTPUT_JSON_PATH }}
        run: |
          echo "DEBUG OUTPUT_JSON_PATH at runtime: ${OUTPUT_JSON_PATH}"
          python scripts/ingest_space_weather_swpc.py

      - name: Commit & push updated JSON
        run: |
          set -e
          cd gaiaeyes-media
          # Destination root (supports Pages 'docs' or custom), default to repo root
          if [ -n "${MEDIA_ROOT}" ]; then
            DEST_DIR="${MEDIA_ROOT%/}/data"
          else
            DEST_DIR="data"
          fi
          # Guard MEDIA_ROOT to only 'docs' or root
          if [ -n "${MEDIA_ROOT}" ] && [ "${MEDIA_ROOT}" != "docs" ]; then
            echo "WARN: Unsupported MEDIA_ROOT='${MEDIA_ROOT}', falling back to repo root."
            DEST_DIR="data"
          fi
          # Ensure DEST_DIR has the latest file (copy from fixed emitter location)
          SRC_JSON="${{ github.workspace }}/gaiaeyes-media/data/space_weather.json"
          if [ -f "${SRC_JSON}" ] && [ "${DEST_DIR}" != "data" ]; then
            mkdir -p "${DEST_DIR}"
            cp -f "${SRC_JSON}" "${DEST_DIR}/space_weather.json"
          fi
          mkdir -p "${DEST_DIR}"
          echo "DEBUG checking git status under ${DEST_DIR}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if git status --porcelain | grep -E "^\s*M\s+${DEST_DIR}/space_weather\.json|^\?\?\s+${DEST_DIR}/space_weather\.json"; then
            git add ${DEST_DIR}/space_weather.json
            git commit -m "chore(space-weather): update dashboard JSON [skip ci]"
            git push
            if [ -n "${MEDIA_CDN_BASE}" ]; then
              echo "Published: ${MEDIA_CDN_BASE%/}/space_weather.json"
            fi
          else
            echo "No JSON changes to commit."
          fi

      - name: Create issue on failure
        if: failure()
        uses: dacbd/create-issue-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Space-weather ingestion failed"
          body: "Check the latest run logs in Actions."
