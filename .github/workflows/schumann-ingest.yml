name: schumann-ingest
permissions:
  contents: write
on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}   # Pooler DSN with pgbouncer & sslmode
      MEDIA_REPO_OWNER: ${{ secrets.MEDIA_REPO_OWNER }}
      MEDIA_REPO_NAME:  ${{ secrets.MEDIA_REPO_NAME }}
      GAIAEYES_MEDIA_TOKEN: ${{ secrets.GAIAEYES_MEDIA_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Checkout media repo (gaiaeyes-media)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.MEDIA_REPO_OWNER }}/${{ env.MEDIA_REPO_NAME }}
          token: ${{ env.GAIAEYES_MEDIA_TOKEN }}
          path: gaiaeyes-media
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install httpx asyncpg
      - name: Run Schumann ingester
        env:
          MEDIA_DIR: ${{ github.workspace }}/gaiaeyes-media
        run: |
          python scripts/ingest_schumann_github.py
      - name: Commit & push media updates
        run: |
          set -euo pipefail
          cd gaiaeyes-media
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Make sure we're on main and up-to-date
          git fetch origin main
          git checkout -B main origin/main
          # Stage any changes produced by the ingester
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          ts="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git commit -m "schumann update ${ts} [skip ci]"
          # Robust push with rebase + lease, retrying on race conditions
          for attempt in 1 2 3; do
            echo "Push attempt ${attempt}..."
            # Rebase on latest remote and autostash local changes if any hooks touched files
            git pull --rebase --autostash origin main || true
            if git push --force-with-lease origin HEAD:main; then
              echo "Push succeeded on attempt ${attempt}."
              exit 0
            fi
            echo "Push failed on attempt ${attempt}, retrying..."
            sleep $((2 + (RANDOM % 4)))
          done
          echo "ERROR: Could not push after 3 attempts."
          exit 1
