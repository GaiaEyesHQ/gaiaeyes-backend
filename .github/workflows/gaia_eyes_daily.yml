name: Gaia Eyes — Daily Pipeline

on:
  schedule:
    - cron: "5 14 * * *" # 14:05 UTC ~ 09:05 America/Chicago
  workflow_dispatch:
    inputs:
      date:
        description: "YYYY-MM-DD (optional; defaults to GAIA_TIMEZONE today)"
        required: false
      platform:
        description: "daily_posts.platform"
        required: false
        default: "default"

jobs:
  generate:
    name: Generate Earthscope → Supabase
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_REST_URL: ${{ secrets.SUPABASE_REST_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      EARTHSCOPE_USER_ID: ${{ secrets.EARTHSCOPE_USER_ID }}
      GAIA_TIMEZONE: ${{ secrets.GAIA_TIMEZONE }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SUPABASE_POSTS_SCHEMA: content
      SUPABASE_POSTS_TABLE: daily_posts
      SUPABASE_MARTS_SCHEMA: marts
      SUPABASE_SW_TABLE: space_weather_daily
      SUPABASE_SR_TABLE: schumann_daily
      SUPABASE_DAY_COLUMN: day
      EARTHSCOPE_PLATFORM: ${{ github.event.inputs.platform || 'default' }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        working-directory: bots/earthscope_post
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install openai supabase
      - name: Run generator (earthscope_generate.py)
        working-directory: bots/earthscope_post
        run: |
          DATE_ARG=""
          if [ -n "${{ github.event.inputs.date }}" ]; then DATE_ARG="--date ${{ github.event.inputs.date }}"; fi
          python earthscope_generate.py $DATE_ARG --platform ${{ env.EARTHSCOPE_PLATFORM }}

  render:
    name: Render Images → Media Repo
    runs-on: ubuntu-latest
    needs: generate
    permissions:
      contents: read
    outputs:
      media_sha: ${{ steps.media_sha.outputs.sha }}
    env:
      GAIA_TIMEZONE: ${{ secrets.GAIA_TIMEZONE }}
      SUPABASE_REST_URL: ${{ secrets.SUPABASE_REST_URL }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SUPABASE_USER_ID: ${{ secrets.EARTHSCOPE_USER_ID }}
      MEDIA_REPO_OWNER: ${{ secrets.MEDIA_REPO_OWNER }}
      MEDIA_REPO_NAME:  ${{ secrets.MEDIA_REPO_NAME }}
      MEDIA_REPO_TOKEN: ${{ secrets.GAIAEYES_MEDIA_TOKEN }}
      MEDIA_REPO_PATH:  ${{ github.workspace }}/gaiaeyes-media
      LOGO_PATH:        ${{ github.workspace }}/bots/earthscope_post/GaiaEyesLogo.png
    steps:
      - uses: actions/checkout@v4
      - name: Clone media repo
        run: |
          git clone https://x-access-token:${MEDIA_REPO_TOKEN}@github.com/${MEDIA_REPO_OWNER}/${MEDIA_REPO_NAME}.git "${MEDIA_REPO_PATH}"
      - name: Configure git identity (media repo)
        run: |
          git -C "${MEDIA_REPO_PATH}" config user.name  "github-actions[bot]"
          git -C "${MEDIA_REPO_PATH}" config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        working-directory: bots/earthscope_post
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Render cards (bot commits & pushes)
        working-directory: bots/earthscope_post
        env:
          MEDIA_REPO_PATH: ${{ env.MEDIA_REPO_PATH }}
          LOGO_PATH: ${{ env.LOGO_PATH }}
        run: |
          python gaia_eyes_viral_bot.py
      - name: Get media repo commit sha
        id: media_sha
        run: |
          cd "${MEDIA_REPO_PATH}"
          echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  post:
    name: Post Square + Carousel
    runs-on: ubuntu-latest
    needs: render
    permissions:
      contents: read
    env:
      SUPABASE_REST_URL: ${{ secrets.SUPABASE_REST_URL }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      GAIA_TIMEZONE: ${{ secrets.GAIA_TIMEZONE }}
      FB_PAGE_ID: ${{ secrets.FB_PAGE_ID }}
      FB_ACCESS_TOKEN: ${{ secrets.FB_ACCESS_TOKEN }}
      IG_USER_ID: ${{ secrets.IG_USER_ID }}
      MEDIA_REPO_OWNER: ${{ secrets.MEDIA_REPO_OWNER }}
      MEDIA_REPO_NAME:  ${{ secrets.MEDIA_REPO_NAME }}
      MEDIA_CDN_BASE:   https://cdn.jsdelivr.net/gh/${{ secrets.MEDIA_REPO_OWNER }}/${{ secrets.MEDIA_REPO_NAME }}@${{ needs.render.outputs.media_sha }}/images
    steps:
      - uses: actions/checkout@v4
      - name: Wait for CDN propagation
        run: sleep 60
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        working-directory: bots/earthscope_post
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install requests python-dotenv
      - name: Post square (FB)
        working-directory: bots/earthscope_post
        run: python meta_poster.py post-square
      - name: Post carousel (IG)
        working-directory: bots/earthscope_post
        run: python meta_poster.py post-carousel
