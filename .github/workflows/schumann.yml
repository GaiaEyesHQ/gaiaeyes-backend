name: Schumann Extractors

on:
  schedule:
    - cron: "*/15 * * * *"   # every 15 minutes UTC
  workflow_dispatch:

jobs:
  run-schumann:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      BACKEND_DIR: backend
      WORKDIR: backend/bots/schumann
      MEDIA_DIR: media
      PYTHON_VERSION: "3.10"
      PREFER: "tomsk,cumiana"

    steps:
      - name: Checkout backend
        uses: actions/checkout@v4
        with:
          path: ${{ env.BACKEND_DIR }}

      - name: Checkout media repo
        uses: actions/checkout@v4
        with:
          repository: gennwu/gaiaeyes-media
          path: ${{ env.MEDIA_DIR }}
          token: ${{ secrets.GAIAEYES_MEDIA_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        working-directory: ${{ env.WORKDIR }}
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Run extractors and merge
        id: run
        working-directory: ${{ env.WORKDIR }}
        run: |
          set -euo pipefail
          TS="$(date -u +'%Y%m%d_%H%M%SZ')"
          echo "ts=$TS" >> $GITHUB_OUTPUT

          mkdir -p runs

          python tomsk_extractor.py \
            --out runs/tomsk_now.json \
            --overlay runs/tomsk_overlay.png \
            --stale-hours 6 \
            --insecure || true

          python cumiana_extractor.py \
            --out runs/cumiana_now.json \
            --overlay runs/cumiana_overlay.png \
            --anchor fixed --fixed-offset-px 22 \
            --prefer auto \
            --insecure || true

          python schumann_multi.py \
            --prefer "${PREFER}" \
            --out runs/schumann_now.json \
            --overlay runs/.ignore_overlay.png \
            --insecure || true

      - name: Stage artifacts into media repo
        working-directory: ${{ env.WORKDIR }}
        env:
          TS: ${{ steps.run.outputs.ts }}
          MEDIA_DIR: ${{ github.workspace }}/media
        run: |
          mkdir -p "$MEDIA_DIR/images" "$MEDIA_DIR/data"

          cp -f runs/tomsk_overlay.png   "$MEDIA_DIR/images/tomsk_latest.png"   || true
          cp -f runs/cumiana_overlay.png "$MEDIA_DIR/images/cumiana_latest.png" || true
          cp -f runs/schumann_now.json   "$MEDIA_DIR/data/schumann_latest.json" || true

          cp -f runs/tomsk_now.json      "$MEDIA_DIR/data/tomsk_latest.json"    || true
          cp -f runs/cumiana_now.json    "$MEDIA_DIR/data/cumiana_latest.json"  || true

          cp -f runs/tomsk_overlay.png   "$MEDIA_DIR/images/tomsk_${TS}.png"    || true
          cp -f runs/cumiana_overlay.png "$MEDIA_DIR/images/cumiana_${TS}.png"  || true
          cp -f runs/schumann_now.json   "$MEDIA_DIR/data/schumann_${TS}.json"  || true
          cp -f runs/tomsk_now.json      "$MEDIA_DIR/data/tomsk_${TS}.json"     || true
          cp -f runs/cumiana_now.json    "$MEDIA_DIR/data/cumiana_${TS}.json"   || true

      - name: Commit & push to media repo
        working-directory: ${{ env.MEDIA_DIR }}
        run: |
          git config user.name  "gaiaeyes-bot"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No media changes to commit."
          else
            git commit -m "schumann update $(date -u +'%Y-%m-%dT%H:%M:%SZ') [skip ci]"
            git push
          fi

      - name: Append rows to Supabase
        if: ${{ secrets.SUPABASE_URL != '' && secrets.SUPABASE_SERVICE_ROLE != '' }}
        working-directory: ${{ env.WORKDIR }}
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
        run: |
          set -euo pipefail
          TS_ISO="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

          TJSON=$(cat runs/tomsk_now.json 2>/dev/null || echo '{}')
          CJSON=$(cat runs/cumiana_now.json 2>/dev/null || echo '{}')

          T_STATUS=$(echo "$TJSON" | jq -r '.status // "down"')
          T_F1=$(echo "$TJSON" | jq -r '.fundamental_hz // null')
          C_STATUS=$(echo "$CJSON" | jq -r '.status // "down"')
          C_F1=$(echo "$CJSON" | jq -r '.fundamental_hz // null')

          cat > rows.json <<EOF
          [
            {"source":"tomsk","ts_utc":"$TS_ISO","f1_hz":$T_F1,"harmonics":$(echo "$TJSON" | jq '.harmonics_hz // {}'),"status":"$T_STATUS"},
            {"source":"cumiana","ts_utc":"$TS_ISO","f1_hz":$C_F1,"harmonics":$(echo "$CJSON" | jq '.harmonics_hz // {}'),"status":"$C_STATUS"}
          ]
          EOF

          curl -sS "${SUPABASE_URL}/rest/v1/schumann_samples" \
            -H "apikey: ${SUPABASE_SERVICE_ROLE}" \
            -H "Authorization: Bearer ${SUPABASE_SERVICE_ROLE}" \
            -H "Content-Type: application/json" \
            -H "Prefer: resolution=ignore-duplicates" \
            -d @rows.json || true
